<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="boost\mpl\accumulate.hpp" />
    <ClInclude Include="boost\mpl\advance.hpp" />
    <ClInclude Include="boost\mpl\advance_fwd.hpp" />
    <ClInclude Include="boost\mpl\alias.hpp" />
    <ClInclude Include="boost\mpl\always.hpp" />
    <ClInclude Include="boost\mpl\and.hpp" />
    <ClInclude Include="boost\mpl\apply.hpp" />
    <ClInclude Include="boost\mpl\apply_fwd.hpp" />
    <ClInclude Include="boost\mpl\apply_wrap.hpp" />
    <ClInclude Include="boost\mpl\arg.hpp" />
    <ClInclude Include="boost\mpl\arg_fwd.hpp" />
    <ClInclude Include="boost\mpl\arithmetic.hpp" />
    <ClInclude Include="boost\mpl\assert.hpp" />
    <ClInclude Include="boost\mpl\as_sequence.hpp" />
    <ClInclude Include="boost\mpl\at.hpp" />
    <ClInclude Include="boost\mpl\at_fwd.hpp" />
    <ClInclude Include="boost\mpl\aux_\adl_barrier.hpp" />
    <ClInclude Include="boost\mpl\aux_\advance_backward.hpp" />
    <ClInclude Include="boost\mpl\aux_\advance_forward.hpp" />
    <ClInclude Include="boost\mpl\aux_\apply_1st.hpp" />
    <ClInclude Include="boost\mpl\aux_\arg_typedef.hpp" />
    <ClInclude Include="boost\mpl\aux_\arithmetic_op.hpp" />
    <ClInclude Include="boost\mpl\aux_\arity.hpp" />
    <ClInclude Include="boost\mpl\aux_\arity_spec.hpp" />
    <ClInclude Include="boost\mpl\aux_\at_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\back_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\basic_bind.hpp" />
    <ClInclude Include="boost\mpl\aux_\begin_end_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\clear_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\common_name_wknd.hpp" />
    <ClInclude Include="boost\mpl\aux_\comparison_op.hpp" />
    <ClInclude Include="boost\mpl\aux_\config\adl.hpp" />
    <ClInclude Include="boost\mpl\aux_\config\arrays.hpp" />
    <ClInclude Include="boost\mpl\aux_\config\bcc.hpp" />
    <ClInclude Include="boost\mpl\aux_\config\bind.hpp" />
    <ClInclude Include="boost\mpl\aux_\config\compiler.hpp" />
    <ClInclude Include="boost\mpl\aux_\config\ctps.hpp" />
    <ClInclude Include="boost\mpl\aux_\config\dependent_nttp.hpp" />
    <ClInclude Include="boost\mpl\aux_\config\dmc_ambiguous_ctps.hpp" />
    <ClInclude Include="boost\mpl\aux_\config\dtp.hpp" />
    <ClInclude Include="boost\mpl\aux_\config\eti.hpp" />
    <ClInclude Include="boost\mpl\aux_\config\forwarding.hpp" />
    <ClInclude Include="boost\mpl\aux_\config\gcc.hpp" />
    <ClInclude Include="boost\mpl\aux_\config\gpu.hpp" />
    <ClInclude Include="boost\mpl\aux_\config\has_apply.hpp" />
    <ClInclude Include="boost\mpl\aux_\config\has_xxx.hpp" />
    <ClInclude Include="boost\mpl\aux_\config\integral.hpp" />
    <ClInclude Include="boost\mpl\aux_\config\intel.hpp" />
    <ClInclude Include="boost\mpl\aux_\config\lambda.hpp" />
    <ClInclude Include="boost\mpl\aux_\config\msvc.hpp" />
    <ClInclude Include="boost\mpl\aux_\config\msvc_typename.hpp" />
    <ClInclude Include="boost\mpl\aux_\config\nttp.hpp" />
    <ClInclude Include="boost\mpl\aux_\config\operators.hpp" />
    <ClInclude Include="boost\mpl\aux_\config\overload_resolution.hpp" />
    <ClInclude Include="boost\mpl\aux_\config\pp_counter.hpp" />
    <ClInclude Include="boost\mpl\aux_\config\preprocessor.hpp" />
    <ClInclude Include="boost\mpl\aux_\config\static_constant.hpp" />
    <ClInclude Include="boost\mpl\aux_\config\ttp.hpp" />
    <ClInclude Include="boost\mpl\aux_\config\typeof.hpp" />
    <ClInclude Include="boost\mpl\aux_\config\use_preprocessed.hpp" />
    <ClInclude Include="boost\mpl\aux_\config\workaround.hpp" />
    <ClInclude Include="boost\mpl\aux_\contains_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\count_args.hpp" />
    <ClInclude Include="boost\mpl\aux_\count_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\empty_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\erase_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\erase_key_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\filter_iter.hpp" />
    <ClInclude Include="boost\mpl\aux_\find_if_pred.hpp" />
    <ClInclude Include="boost\mpl\aux_\fold_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\fold_impl_body.hpp" />
    <ClInclude Include="boost\mpl\aux_\fold_op.hpp" />
    <ClInclude Include="boost\mpl\aux_\fold_pred.hpp" />
    <ClInclude Include="boost\mpl\aux_\front_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\full_lambda.hpp" />
    <ClInclude Include="boost\mpl\aux_\has_apply.hpp" />
    <ClInclude Include="boost\mpl\aux_\has_begin.hpp" />
    <ClInclude Include="boost\mpl\aux_\has_key_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\has_rebind.hpp" />
    <ClInclude Include="boost\mpl\aux_\has_size.hpp" />
    <ClInclude Include="boost\mpl\aux_\has_tag.hpp" />
    <ClInclude Include="boost\mpl\aux_\has_type.hpp" />
    <ClInclude Include="boost\mpl\aux_\include_preprocessed.hpp" />
    <ClInclude Include="boost\mpl\aux_\inserter_algorithm.hpp" />
    <ClInclude Include="boost\mpl\aux_\insert_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\insert_range_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\integral_wrapper.hpp" />
    <ClInclude Include="boost\mpl\aux_\is_msvc_eti_arg.hpp" />
    <ClInclude Include="boost\mpl\aux_\iter_apply.hpp" />
    <ClInclude Include="boost\mpl\aux_\iter_fold_if_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\iter_fold_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\iter_push_front.hpp" />
    <ClInclude Include="boost\mpl\aux_\joint_iter.hpp" />
    <ClInclude Include="boost\mpl\aux_\lambda_arity_param.hpp" />
    <ClInclude Include="boost\mpl\aux_\lambda_no_ctps.hpp" />
    <ClInclude Include="boost\mpl\aux_\lambda_spec.hpp" />
    <ClInclude Include="boost\mpl\aux_\lambda_support.hpp" />
    <ClInclude Include="boost\mpl\aux_\largest_int.hpp" />
    <ClInclude Include="boost\mpl\aux_\logical_op.hpp" />
    <ClInclude Include="boost\mpl\aux_\msvc_dtw.hpp" />
    <ClInclude Include="boost\mpl\aux_\msvc_eti_base.hpp" />
    <ClInclude Include="boost\mpl\aux_\msvc_is_class.hpp" />
    <ClInclude Include="boost\mpl\aux_\msvc_never_true.hpp" />
    <ClInclude Include="boost\mpl\aux_\msvc_type.hpp" />
    <ClInclude Include="boost\mpl\aux_\na.hpp" />
    <ClInclude Include="boost\mpl\aux_\na_assert.hpp" />
    <ClInclude Include="boost\mpl\aux_\na_fwd.hpp" />
    <ClInclude Include="boost\mpl\aux_\na_spec.hpp" />
    <ClInclude Include="boost\mpl\aux_\nested_type_wknd.hpp" />
    <ClInclude Include="boost\mpl\aux_\nttp_decl.hpp" />
    <ClInclude Include="boost\mpl\aux_\numeric_cast_utils.hpp" />
    <ClInclude Include="boost\mpl\aux_\numeric_op.hpp" />
    <ClInclude Include="boost\mpl\aux_\O1_size_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\order_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\overload_names.hpp" />
    <ClInclude Include="boost\mpl\aux_\partition_op.hpp" />
    <ClInclude Include="boost\mpl\aux_\pop_back_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\pop_front_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc551\advance_backward.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc551\advance_forward.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc551\and.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc551\apply.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc551\apply_fwd.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc551\apply_wrap.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc551\arg.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc551\basic_bind.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc551\bind.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc551\bind_fwd.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc551\bitand.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc551\bitor.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc551\bitxor.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc551\deque.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc551\divides.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc551\equal_to.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc551\fold_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc551\full_lambda.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc551\greater.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc551\greater_equal.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc551\inherit.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc551\iter_fold_if_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc551\iter_fold_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc551\lambda_no_ctps.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc551\less.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc551\less_equal.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc551\list.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc551\list_c.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc551\map.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc551\minus.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc551\modulus.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc551\not_equal_to.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc551\or.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc551\placeholders.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc551\plus.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc551\quote.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc551\reverse_fold_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc551\reverse_iter_fold_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc551\set.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc551\set_c.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc551\shift_left.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc551\shift_right.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc551\template_arity.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc551\times.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc551\unpack_args.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc551\vector.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc551\vector_c.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc\advance_backward.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc\advance_forward.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc\and.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc\apply.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc\apply_fwd.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc\apply_wrap.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc\arg.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc\basic_bind.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc\bind.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc\bind_fwd.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc\bitand.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc\bitor.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc\bitxor.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc\deque.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc\divides.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc\equal_to.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc\fold_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc\full_lambda.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc\greater.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc\greater_equal.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc\inherit.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc\iter_fold_if_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc\iter_fold_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc\lambda_no_ctps.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc\less.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc\less_equal.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc\list.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc\list_c.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc\map.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc\minus.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc\modulus.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc\not_equal_to.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc\or.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc\placeholders.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc\plus.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc\quote.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc\reverse_fold_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc\reverse_iter_fold_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc\set.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc\set_c.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc\shift_left.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc\shift_right.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc\template_arity.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc\times.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc\unpack_args.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc\vector.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc\vector_c.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc_pre590\advance_backward.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc_pre590\advance_forward.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc_pre590\and.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc_pre590\apply.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc_pre590\apply_fwd.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc_pre590\apply_wrap.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc_pre590\arg.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc_pre590\basic_bind.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc_pre590\bind.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc_pre590\bind_fwd.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc_pre590\bitand.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc_pre590\bitor.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc_pre590\bitxor.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc_pre590\deque.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc_pre590\divides.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc_pre590\equal_to.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc_pre590\fold_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc_pre590\full_lambda.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc_pre590\greater.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc_pre590\greater_equal.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc_pre590\inherit.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc_pre590\iter_fold_if_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc_pre590\iter_fold_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc_pre590\lambda_no_ctps.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc_pre590\less.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc_pre590\less_equal.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc_pre590\list.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc_pre590\list_c.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc_pre590\map.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc_pre590\minus.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc_pre590\modulus.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc_pre590\not_equal_to.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc_pre590\or.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc_pre590\placeholders.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc_pre590\plus.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc_pre590\quote.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc_pre590\reverse_fold_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc_pre590\reverse_iter_fold_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc_pre590\set.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc_pre590\set_c.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc_pre590\shift_left.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc_pre590\shift_right.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc_pre590\template_arity.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc_pre590\times.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc_pre590\unpack_args.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc_pre590\vector.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\bcc_pre590\vector_c.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\dmc\advance_backward.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\dmc\advance_forward.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\dmc\and.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\dmc\apply.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\dmc\apply_fwd.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\dmc\apply_wrap.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\dmc\arg.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\dmc\basic_bind.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\dmc\bind.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\dmc\bind_fwd.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\dmc\bitand.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\dmc\bitor.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\dmc\bitxor.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\dmc\deque.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\dmc\divides.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\dmc\equal_to.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\dmc\fold_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\dmc\full_lambda.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\dmc\greater.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\dmc\greater_equal.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\dmc\inherit.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\dmc\iter_fold_if_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\dmc\iter_fold_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\dmc\lambda_no_ctps.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\dmc\less.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\dmc\less_equal.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\dmc\list.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\dmc\list_c.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\dmc\map.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\dmc\minus.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\dmc\modulus.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\dmc\not_equal_to.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\dmc\or.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\dmc\placeholders.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\dmc\plus.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\dmc\quote.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\dmc\reverse_fold_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\dmc\reverse_iter_fold_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\dmc\set.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\dmc\set_c.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\dmc\shift_left.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\dmc\shift_right.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\dmc\template_arity.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\dmc\times.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\dmc\unpack_args.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\dmc\vector.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\dmc\vector_c.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\gcc\advance_backward.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\gcc\advance_forward.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\gcc\and.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\gcc\apply.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\gcc\apply_fwd.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\gcc\apply_wrap.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\gcc\arg.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\gcc\basic_bind.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\gcc\bind.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\gcc\bind_fwd.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\gcc\bitand.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\gcc\bitor.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\gcc\bitxor.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\gcc\deque.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\gcc\divides.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\gcc\equal_to.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\gcc\fold_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\gcc\full_lambda.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\gcc\greater.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\gcc\greater_equal.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\gcc\inherit.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\gcc\iter_fold_if_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\gcc\iter_fold_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\gcc\lambda_no_ctps.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\gcc\less.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\gcc\less_equal.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\gcc\list.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\gcc\list_c.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\gcc\map.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\gcc\minus.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\gcc\modulus.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\gcc\not_equal_to.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\gcc\or.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\gcc\placeholders.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\gcc\plus.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\gcc\quote.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\gcc\reverse_fold_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\gcc\reverse_iter_fold_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\gcc\set.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\gcc\set_c.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\gcc\shift_left.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\gcc\shift_right.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\gcc\template_arity.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\gcc\times.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\gcc\unpack_args.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\gcc\vector.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\gcc\vector_c.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc60\advance_backward.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc60\advance_forward.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc60\and.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc60\apply.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc60\apply_fwd.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc60\apply_wrap.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc60\arg.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc60\basic_bind.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc60\bind.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc60\bind_fwd.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc60\bitand.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc60\bitor.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc60\bitxor.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc60\deque.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc60\divides.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc60\equal_to.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc60\fold_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc60\full_lambda.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc60\greater.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc60\greater_equal.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc60\inherit.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc60\iter_fold_if_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc60\iter_fold_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc60\lambda_no_ctps.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc60\less.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc60\less_equal.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc60\list.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc60\list_c.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc60\map.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc60\minus.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc60\modulus.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc60\not_equal_to.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc60\or.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc60\placeholders.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc60\plus.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc60\quote.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc60\reverse_fold_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc60\reverse_iter_fold_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc60\set.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc60\set_c.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc60\shift_left.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc60\shift_right.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc60\template_arity.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc60\times.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc60\unpack_args.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc60\vector.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc60\vector_c.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\advance_backward.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\advance_forward.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\and.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\apply.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\apply_fwd.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\apply_wrap.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\arg.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\basic_bind.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\bind.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\bind_fwd.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\bitand.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\bitor.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\bitxor.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\deque.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\divides.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\equal_to.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\fold_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\full_lambda.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\greater.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\greater_equal.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\inherit.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\iter_fold_if_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\iter_fold_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\lambda_no_ctps.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\less.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\less_equal.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\list.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\list_c.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\map.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\minus.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\modulus.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\not_equal_to.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\or.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\placeholders.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\plus.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\quote.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\reverse_fold_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\reverse_iter_fold_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\set.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\set_c.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\shift_left.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\shift_right.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\template_arity.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\times.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\unpack_args.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\vector.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\msvc70\vector_c.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\mwcw\advance_backward.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\mwcw\advance_forward.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\mwcw\and.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\mwcw\apply.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\mwcw\apply_fwd.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\mwcw\apply_wrap.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\mwcw\arg.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\mwcw\basic_bind.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\mwcw\bind.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\mwcw\bind_fwd.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\mwcw\bitand.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\mwcw\bitor.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\mwcw\bitxor.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\mwcw\deque.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\mwcw\divides.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\mwcw\equal_to.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\mwcw\fold_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\mwcw\full_lambda.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\mwcw\greater.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\mwcw\greater_equal.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\mwcw\inherit.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\mwcw\iter_fold_if_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\mwcw\iter_fold_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\mwcw\lambda_no_ctps.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\mwcw\less.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\mwcw\less_equal.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\mwcw\list.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\mwcw\list_c.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\mwcw\map.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\mwcw\minus.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\mwcw\modulus.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\mwcw\not_equal_to.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\mwcw\or.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\mwcw\placeholders.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\mwcw\plus.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\mwcw\quote.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\mwcw\reverse_fold_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\mwcw\reverse_iter_fold_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\mwcw\set.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\mwcw\set_c.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\mwcw\shift_left.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\mwcw\shift_right.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\mwcw\template_arity.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\mwcw\times.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\mwcw\unpack_args.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\mwcw\vector.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\mwcw\vector_c.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ctps\advance_backward.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ctps\advance_forward.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ctps\and.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ctps\apply.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ctps\apply_fwd.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ctps\apply_wrap.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ctps\arg.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ctps\basic_bind.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ctps\bind.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ctps\bind_fwd.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ctps\bitand.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ctps\bitor.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ctps\bitxor.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ctps\deque.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ctps\divides.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ctps\equal_to.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ctps\fold_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ctps\full_lambda.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ctps\greater.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ctps\greater_equal.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ctps\inherit.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ctps\iter_fold_if_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ctps\iter_fold_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ctps\lambda_no_ctps.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ctps\less.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ctps\less_equal.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ctps\list.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ctps\list_c.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ctps\map.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ctps\minus.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ctps\modulus.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ctps\not_equal_to.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ctps\or.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ctps\placeholders.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ctps\plus.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ctps\quote.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ctps\reverse_fold_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ctps\reverse_iter_fold_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ctps\set.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ctps\set_c.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ctps\shift_left.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ctps\shift_right.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ctps\template_arity.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ctps\times.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ctps\unpack_args.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ctps\vector.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ctps\vector_c.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ttp\advance_backward.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ttp\advance_forward.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ttp\and.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ttp\apply.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ttp\apply_fwd.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ttp\apply_wrap.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ttp\arg.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ttp\basic_bind.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ttp\bind.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ttp\bind_fwd.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ttp\bitand.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ttp\bitor.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ttp\bitxor.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ttp\deque.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ttp\divides.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ttp\equal_to.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ttp\fold_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ttp\full_lambda.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ttp\greater.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ttp\greater_equal.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ttp\inherit.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ttp\iter_fold_if_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ttp\iter_fold_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ttp\lambda_no_ctps.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ttp\less.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ttp\less_equal.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ttp\list.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ttp\list_c.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ttp\map.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ttp\minus.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ttp\modulus.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ttp\not_equal_to.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ttp\or.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ttp\placeholders.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ttp\plus.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ttp\quote.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ttp\reverse_fold_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ttp\reverse_iter_fold_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ttp\set.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ttp\set_c.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ttp\shift_left.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ttp\shift_right.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ttp\template_arity.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ttp\times.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ttp\unpack_args.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ttp\vector.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\no_ttp\vector_c.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\advance_backward.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\advance_forward.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\and.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\apply.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\apply_fwd.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\apply_wrap.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\arg.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\basic_bind.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\bind.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\bind_fwd.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\bitand.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\bitor.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\bitxor.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\deque.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\divides.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\equal_to.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\fold_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\full_lambda.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\greater.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\greater_equal.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\inherit.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\iter_fold_if_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\iter_fold_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\lambda_no_ctps.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\less.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\less_equal.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\list.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\list_c.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\map.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\minus.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\modulus.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\not_equal_to.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\or.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\placeholders.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\plus.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\quote.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\reverse_fold_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\reverse_iter_fold_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\set.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\set_c.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\shift_left.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\shift_right.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\template_arity.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\times.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\unpack_args.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\vector.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessed\plain\vector_c.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessor\add.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessor\default_params.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessor\def_params_tail.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessor\enum.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessor\ext_params.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessor\filter_params.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessor\is_seq.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessor\params.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessor\partial_spec_params.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessor\range.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessor\repeat.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessor\sub.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessor\token_equal.hpp" />
    <ClInclude Include="boost\mpl\aux_\preprocessor\tuple.hpp" />
    <ClInclude Include="boost\mpl\aux_\ptr_to_ref.hpp" />
    <ClInclude Include="boost\mpl\aux_\push_back_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\push_front_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\range_c\back.hpp" />
    <ClInclude Include="boost\mpl\aux_\range_c\empty.hpp" />
    <ClInclude Include="boost\mpl\aux_\range_c\front.hpp" />
    <ClInclude Include="boost\mpl\aux_\range_c\iterator.hpp" />
    <ClInclude Include="boost\mpl\aux_\range_c\O1_size.hpp" />
    <ClInclude Include="boost\mpl\aux_\range_c\size.hpp" />
    <ClInclude Include="boost\mpl\aux_\range_c\tag.hpp" />
    <ClInclude Include="boost\mpl\aux_\reverse_fold_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\reverse_fold_impl_body.hpp" />
    <ClInclude Include="boost\mpl\aux_\reverse_iter_fold_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\sequence_wrapper.hpp" />
    <ClInclude Include="boost\mpl\aux_\shift_op.hpp" />
    <ClInclude Include="boost\mpl\aux_\single_element_iter.hpp" />
    <ClInclude Include="boost\mpl\aux_\size_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\sort_impl.hpp" />
    <ClInclude Include="boost\mpl\aux_\static_cast.hpp" />
    <ClInclude Include="boost\mpl\aux_\template_arity.hpp" />
    <ClInclude Include="boost\mpl\aux_\template_arity_fwd.hpp" />
    <ClInclude Include="boost\mpl\aux_\test.hpp" />
    <ClInclude Include="boost\mpl\aux_\test\assert.hpp" />
    <ClInclude Include="boost\mpl\aux_\test\data.hpp" />
    <ClInclude Include="boost\mpl\aux_\test\test_case.hpp" />
    <ClInclude Include="boost\mpl\aux_\traits_lambda_spec.hpp" />
    <ClInclude Include="boost\mpl\aux_\transform_iter.hpp" />
    <ClInclude Include="boost\mpl\aux_\type_wrapper.hpp" />
    <ClInclude Include="boost\mpl\aux_\unwrap.hpp" />
    <ClInclude Include="boost\mpl\aux_\value_wknd.hpp" />
    <ClInclude Include="boost\mpl\aux_\yes_no.hpp" />
    <ClInclude Include="boost\mpl\back.hpp" />
    <ClInclude Include="boost\mpl\back_fwd.hpp" />
    <ClInclude Include="boost\mpl\back_inserter.hpp" />
    <ClInclude Include="boost\mpl\base.hpp" />
    <ClInclude Include="boost\mpl\begin.hpp" />
    <ClInclude Include="boost\mpl\begin_end.hpp" />
    <ClInclude Include="boost\mpl\begin_end_fwd.hpp" />
    <ClInclude Include="boost\mpl\bind.hpp" />
    <ClInclude Include="boost\mpl\bind_fwd.hpp" />
    <ClInclude Include="boost\mpl\bitand.hpp" />
    <ClInclude Include="boost\mpl\bitor.hpp" />
    <ClInclude Include="boost\mpl\bitwise.hpp" />
    <ClInclude Include="boost\mpl\bitxor.hpp" />
    <ClInclude Include="boost\mpl\bool.hpp" />
    <ClInclude Include="boost\mpl\bool_fwd.hpp" />
    <ClInclude Include="boost\mpl\char.hpp" />
    <ClInclude Include="boost\mpl\char_fwd.hpp" />
    <ClInclude Include="boost\mpl\clear.hpp" />
    <ClInclude Include="boost\mpl\clear_fwd.hpp" />
    <ClInclude Include="boost\mpl\comparison.hpp" />
    <ClInclude Include="boost\mpl\contains.hpp" />
    <ClInclude Include="boost\mpl\contains_fwd.hpp" />
    <ClInclude Include="boost\mpl\copy.hpp" />
    <ClInclude Include="boost\mpl\copy_if.hpp" />
    <ClInclude Include="boost\mpl\count.hpp" />
    <ClInclude Include="boost\mpl\count_fwd.hpp" />
    <ClInclude Include="boost\mpl\count_if.hpp" />
    <ClInclude Include="boost\mpl\deque.hpp" />
    <ClInclude Include="boost\mpl\deref.hpp" />
    <ClInclude Include="boost\mpl\distance.hpp" />
    <ClInclude Include="boost\mpl\distance_fwd.hpp" />
    <ClInclude Include="boost\mpl\divides.hpp" />
    <ClInclude Include="boost\mpl\empty.hpp" />
    <ClInclude Include="boost\mpl\empty_base.hpp" />
    <ClInclude Include="boost\mpl\empty_fwd.hpp" />
    <ClInclude Include="boost\mpl\empty_sequence.hpp" />
    <ClInclude Include="boost\mpl\end.hpp" />
    <ClInclude Include="boost\mpl\equal.hpp" />
    <ClInclude Include="boost\mpl\equal_to.hpp" />
    <ClInclude Include="boost\mpl\erase.hpp" />
    <ClInclude Include="boost\mpl\erase_fwd.hpp" />
    <ClInclude Include="boost\mpl\erase_key.hpp" />
    <ClInclude Include="boost\mpl\erase_key_fwd.hpp" />
    <ClInclude Include="boost\mpl\eval_if.hpp" />
    <ClInclude Include="boost\mpl\filter_view.hpp" />
    <ClInclude Include="boost\mpl\find.hpp" />
    <ClInclude Include="boost\mpl\find_if.hpp" />
    <ClInclude Include="boost\mpl\fold.hpp" />
    <ClInclude Include="boost\mpl\for_each.hpp" />
    <ClInclude Include="boost\mpl\front.hpp" />
    <ClInclude Include="boost\mpl\front_fwd.hpp" />
    <ClInclude Include="boost\mpl\front_inserter.hpp" />
    <ClInclude Include="boost\mpl\get_tag.hpp" />
    <ClInclude Include="boost\mpl\greater.hpp" />
    <ClInclude Include="boost\mpl\greater_equal.hpp" />
    <ClInclude Include="boost\mpl\has_key.hpp" />
    <ClInclude Include="boost\mpl\has_key_fwd.hpp" />
    <ClInclude Include="boost\mpl\has_xxx.hpp" />
    <ClInclude Include="boost\mpl\identity.hpp" />
    <ClInclude Include="boost\mpl\if.hpp" />
    <ClInclude Include="boost\mpl\index_if.hpp" />
    <ClInclude Include="boost\mpl\index_of.hpp" />
    <ClInclude Include="boost\mpl\inherit.hpp" />
    <ClInclude Include="boost\mpl\inherit_linearly.hpp" />
    <ClInclude Include="boost\mpl\insert.hpp" />
    <ClInclude Include="boost\mpl\inserter.hpp" />
    <ClInclude Include="boost\mpl\insert_fwd.hpp" />
    <ClInclude Include="boost\mpl\insert_range.hpp" />
    <ClInclude Include="boost\mpl\insert_range_fwd.hpp" />
    <ClInclude Include="boost\mpl\int.hpp" />
    <ClInclude Include="boost\mpl\integral_c.hpp" />
    <ClInclude Include="boost\mpl\integral_c_fwd.hpp" />
    <ClInclude Include="boost\mpl\integral_c_tag.hpp" />
    <ClInclude Include="boost\mpl\int_fwd.hpp" />
    <ClInclude Include="boost\mpl\is_placeholder.hpp" />
    <ClInclude Include="boost\mpl\is_sequence.hpp" />
    <ClInclude Include="boost\mpl\iterator_category.hpp" />
    <ClInclude Include="boost\mpl\iterator_range.hpp" />
    <ClInclude Include="boost\mpl\iterator_tags.hpp" />
    <ClInclude Include="boost\mpl\iter_fold.hpp" />
    <ClInclude Include="boost\mpl\iter_fold_if.hpp" />
    <ClInclude Include="boost\mpl\joint_view.hpp" />
    <ClInclude Include="boost\mpl\key_type.hpp" />
    <ClInclude Include="boost\mpl\key_type_fwd.hpp" />
    <ClInclude Include="boost\mpl\lambda.hpp" />
    <ClInclude Include="boost\mpl\lambda_fwd.hpp" />
    <ClInclude Include="boost\mpl\less.hpp" />
    <ClInclude Include="boost\mpl\less_equal.hpp" />
    <ClInclude Include="boost\mpl\limits\arity.hpp" />
    <ClInclude Include="boost\mpl\limits\list.hpp" />
    <ClInclude Include="boost\mpl\limits\map.hpp" />
    <ClInclude Include="boost\mpl\limits\set.hpp" />
    <ClInclude Include="boost\mpl\limits\string.hpp" />
    <ClInclude Include="boost\mpl\limits\unrolling.hpp" />
    <ClInclude Include="boost\mpl\limits\vector.hpp" />
    <ClInclude Include="boost\mpl\list.hpp" />
    <ClInclude Include="boost\mpl\list\aux_\begin_end.hpp" />
    <ClInclude Include="boost\mpl\list\aux_\clear.hpp" />
    <ClInclude Include="boost\mpl\list\aux_\empty.hpp" />
    <ClInclude Include="boost\mpl\list\aux_\front.hpp" />
    <ClInclude Include="boost\mpl\list\aux_\include_preprocessed.hpp" />
    <ClInclude Include="boost\mpl\list\aux_\item.hpp" />
    <ClInclude Include="boost\mpl\list\aux_\iterator.hpp" />
    <ClInclude Include="boost\mpl\list\aux_\numbered.hpp" />
    <ClInclude Include="boost\mpl\list\aux_\numbered_c.hpp" />
    <ClInclude Include="boost\mpl\list\aux_\O1_size.hpp" />
    <ClInclude Include="boost\mpl\list\aux_\pop_front.hpp" />
    <ClInclude Include="boost\mpl\list\aux_\preprocessed\plain\list10.hpp" />
    <ClInclude Include="boost\mpl\list\aux_\preprocessed\plain\list10_c.hpp" />
    <ClInclude Include="boost\mpl\list\aux_\preprocessed\plain\list20.hpp" />
    <ClInclude Include="boost\mpl\list\aux_\preprocessed\plain\list20_c.hpp" />
    <ClInclude Include="boost\mpl\list\aux_\preprocessed\plain\list30.hpp" />
    <ClInclude Include="boost\mpl\list\aux_\preprocessed\plain\list30_c.hpp" />
    <ClInclude Include="boost\mpl\list\aux_\preprocessed\plain\list40.hpp" />
    <ClInclude Include="boost\mpl\list\aux_\preprocessed\plain\list40_c.hpp" />
    <ClInclude Include="boost\mpl\list\aux_\preprocessed\plain\list50.hpp" />
    <ClInclude Include="boost\mpl\list\aux_\preprocessed\plain\list50_c.hpp" />
    <ClInclude Include="boost\mpl\list\aux_\push_back.hpp" />
    <ClInclude Include="boost\mpl\list\aux_\push_front.hpp" />
    <ClInclude Include="boost\mpl\list\aux_\size.hpp" />
    <ClInclude Include="boost\mpl\list\aux_\tag.hpp" />
    <ClInclude Include="boost\mpl\list\list0.hpp" />
    <ClInclude Include="boost\mpl\list\list0_c.hpp" />
    <ClInclude Include="boost\mpl\list\list10.hpp" />
    <ClInclude Include="boost\mpl\list\list10_c.hpp" />
    <ClInclude Include="boost\mpl\list\list20.hpp" />
    <ClInclude Include="boost\mpl\list\list20_c.hpp" />
    <ClInclude Include="boost\mpl\list\list30.hpp" />
    <ClInclude Include="boost\mpl\list\list30_c.hpp" />
    <ClInclude Include="boost\mpl\list\list40.hpp" />
    <ClInclude Include="boost\mpl\list\list40_c.hpp" />
    <ClInclude Include="boost\mpl\list\list50.hpp" />
    <ClInclude Include="boost\mpl\list\list50_c.hpp" />
    <ClInclude Include="boost\mpl\list_c.hpp" />
    <ClInclude Include="boost\mpl\logical.hpp" />
    <ClInclude Include="boost\mpl\long.hpp" />
    <ClInclude Include="boost\mpl\long_fwd.hpp" />
    <ClInclude Include="boost\mpl\lower_bound.hpp" />
    <ClInclude Include="boost\mpl\map.hpp" />
    <ClInclude Include="boost\mpl\map\aux_\at_impl.hpp" />
    <ClInclude Include="boost\mpl\map\aux_\begin_end_impl.hpp" />
    <ClInclude Include="boost\mpl\map\aux_\clear_impl.hpp" />
    <ClInclude Include="boost\mpl\map\aux_\contains_impl.hpp" />
    <ClInclude Include="boost\mpl\map\aux_\empty_impl.hpp" />
    <ClInclude Include="boost\mpl\map\aux_\erase_impl.hpp" />
    <ClInclude Include="boost\mpl\map\aux_\erase_key_impl.hpp" />
    <ClInclude Include="boost\mpl\map\aux_\has_key_impl.hpp" />
    <ClInclude Include="boost\mpl\map\aux_\include_preprocessed.hpp" />
    <ClInclude Include="boost\mpl\map\aux_\insert_impl.hpp" />
    <ClInclude Include="boost\mpl\map\aux_\insert_range_impl.hpp" />
    <ClInclude Include="boost\mpl\map\aux_\item.hpp" />
    <ClInclude Include="boost\mpl\map\aux_\iterator.hpp" />
    <ClInclude Include="boost\mpl\map\aux_\key_type_impl.hpp" />
    <ClInclude Include="boost\mpl\map\aux_\map0.hpp" />
    <ClInclude Include="boost\mpl\map\aux_\numbered.hpp" />
    <ClInclude Include="boost\mpl\map\aux_\preprocessed\no_ctps\map10.hpp" />
    <ClInclude Include="boost\mpl\map\aux_\preprocessed\no_ctps\map20.hpp" />
    <ClInclude Include="boost\mpl\map\aux_\preprocessed\no_ctps\map30.hpp" />
    <ClInclude Include="boost\mpl\map\aux_\preprocessed\no_ctps\map40.hpp" />
    <ClInclude Include="boost\mpl\map\aux_\preprocessed\no_ctps\map50.hpp" />
    <ClInclude Include="boost\mpl\map\aux_\preprocessed\plain\map10.hpp" />
    <ClInclude Include="boost\mpl\map\aux_\preprocessed\plain\map20.hpp" />
    <ClInclude Include="boost\mpl\map\aux_\preprocessed\plain\map30.hpp" />
    <ClInclude Include="boost\mpl\map\aux_\preprocessed\plain\map40.hpp" />
    <ClInclude Include="boost\mpl\map\aux_\preprocessed\plain\map50.hpp" />
    <ClInclude Include="boost\mpl\map\aux_\preprocessed\typeof_based\map10.hpp" />
    <ClInclude Include="boost\mpl\map\aux_\preprocessed\typeof_based\map20.hpp" />
    <ClInclude Include="boost\mpl\map\aux_\preprocessed\typeof_based\map30.hpp" />
    <ClInclude Include="boost\mpl\map\aux_\preprocessed\typeof_based\map40.hpp" />
    <ClInclude Include="boost\mpl\map\aux_\preprocessed\typeof_based\map50.hpp" />
    <ClInclude Include="boost\mpl\map\aux_\size_impl.hpp" />
    <ClInclude Include="boost\mpl\map\aux_\tag.hpp" />
    <ClInclude Include="boost\mpl\map\aux_\value_type_impl.hpp" />
    <ClInclude Include="boost\mpl\map\map0.hpp" />
    <ClInclude Include="boost\mpl\map\map10.hpp" />
    <ClInclude Include="boost\mpl\map\map20.hpp" />
    <ClInclude Include="boost\mpl\map\map30.hpp" />
    <ClInclude Include="boost\mpl\map\map40.hpp" />
    <ClInclude Include="boost\mpl\map\map50.hpp" />
    <ClInclude Include="boost\mpl\math\fixed_c.hpp" />
    <ClInclude Include="boost\mpl\math\is_even.hpp" />
    <ClInclude Include="boost\mpl\math\rational_c.hpp" />
    <ClInclude Include="boost\mpl\max.hpp" />
    <ClInclude Include="boost\mpl\max_element.hpp" />
    <ClInclude Include="boost\mpl\min.hpp" />
    <ClInclude Include="boost\mpl\minus.hpp" />
    <ClInclude Include="boost\mpl\min_element.hpp" />
    <ClInclude Include="boost\mpl\min_max.hpp" />
    <ClInclude Include="boost\mpl\modulus.hpp" />
    <ClInclude Include="boost\mpl\multiplies.hpp" />
    <ClInclude Include="boost\mpl\multiset\aux_\count_impl.hpp" />
    <ClInclude Include="boost\mpl\multiset\aux_\insert_impl.hpp" />
    <ClInclude Include="boost\mpl\multiset\aux_\item.hpp" />
    <ClInclude Include="boost\mpl\multiset\aux_\multiset0.hpp" />
    <ClInclude Include="boost\mpl\multiset\aux_\tag.hpp" />
    <ClInclude Include="boost\mpl\multiset\multiset0.hpp" />
    <ClInclude Include="boost\mpl\negate.hpp" />
    <ClInclude Include="boost\mpl\next.hpp" />
    <ClInclude Include="boost\mpl\next_prior.hpp" />
    <ClInclude Include="boost\mpl\not.hpp" />
    <ClInclude Include="boost\mpl\not_equal_to.hpp" />
    <ClInclude Include="boost\mpl\numeric_cast.hpp" />
    <ClInclude Include="boost\mpl\O1_size.hpp" />
    <ClInclude Include="boost\mpl\O1_size_fwd.hpp" />
    <ClInclude Include="boost\mpl\or.hpp" />
    <ClInclude Include="boost\mpl\order.hpp" />
    <ClInclude Include="boost\mpl\order_fwd.hpp" />
    <ClInclude Include="boost\mpl\pair.hpp" />
    <ClInclude Include="boost\mpl\pair_view.hpp" />
    <ClInclude Include="boost\mpl\partition.hpp" />
    <ClInclude Include="boost\mpl\placeholders.hpp" />
    <ClInclude Include="boost\mpl\plus.hpp" />
    <ClInclude Include="boost\mpl\pop_back.hpp" />
    <ClInclude Include="boost\mpl\pop_back_fwd.hpp" />
    <ClInclude Include="boost\mpl\pop_front.hpp" />
    <ClInclude Include="boost\mpl\pop_front_fwd.hpp" />
    <ClInclude Include="boost\mpl\print.hpp" />
    <ClInclude Include="boost\mpl\prior.hpp" />
    <ClInclude Include="boost\mpl\protect.hpp" />
    <ClInclude Include="boost\mpl\push_back.hpp" />
    <ClInclude Include="boost\mpl\push_back_fwd.hpp" />
    <ClInclude Include="boost\mpl\push_front.hpp" />
    <ClInclude Include="boost\mpl\push_front_fwd.hpp" />
    <ClInclude Include="boost\mpl\quote.hpp" />
    <ClInclude Include="boost\mpl\range_c.hpp" />
    <ClInclude Include="boost\mpl\remove.hpp" />
    <ClInclude Include="boost\mpl\remove_if.hpp" />
    <ClInclude Include="boost\mpl\replace.hpp" />
    <ClInclude Include="boost\mpl\replace_if.hpp" />
    <ClInclude Include="boost\mpl\reverse.hpp" />
    <ClInclude Include="boost\mpl\reverse_fold.hpp" />
    <ClInclude Include="boost\mpl\reverse_iter_fold.hpp" />
    <ClInclude Include="boost\mpl\same_as.hpp" />
    <ClInclude Include="boost\mpl\sequence_tag.hpp" />
    <ClInclude Include="boost\mpl\sequence_tag_fwd.hpp" />
    <ClInclude Include="boost\mpl\set.hpp" />
    <ClInclude Include="boost\mpl\set\aux_\at_impl.hpp" />
    <ClInclude Include="boost\mpl\set\aux_\begin_end_impl.hpp" />
    <ClInclude Include="boost\mpl\set\aux_\clear_impl.hpp" />
    <ClInclude Include="boost\mpl\set\aux_\empty_impl.hpp" />
    <ClInclude Include="boost\mpl\set\aux_\erase_impl.hpp" />
    <ClInclude Include="boost\mpl\set\aux_\erase_key_impl.hpp" />
    <ClInclude Include="boost\mpl\set\aux_\has_key_impl.hpp" />
    <ClInclude Include="boost\mpl\set\aux_\include_preprocessed.hpp" />
    <ClInclude Include="boost\mpl\set\aux_\insert_impl.hpp" />
    <ClInclude Include="boost\mpl\set\aux_\insert_range_impl.hpp" />
    <ClInclude Include="boost\mpl\set\aux_\item.hpp" />
    <ClInclude Include="boost\mpl\set\aux_\iterator.hpp" />
    <ClInclude Include="boost\mpl\set\aux_\key_type_impl.hpp" />
    <ClInclude Include="boost\mpl\set\aux_\numbered.hpp" />
    <ClInclude Include="boost\mpl\set\aux_\numbered_c.hpp" />
    <ClInclude Include="boost\mpl\set\aux_\preprocessed\plain\set10.hpp" />
    <ClInclude Include="boost\mpl\set\aux_\preprocessed\plain\set10_c.hpp" />
    <ClInclude Include="boost\mpl\set\aux_\preprocessed\plain\set20.hpp" />
    <ClInclude Include="boost\mpl\set\aux_\preprocessed\plain\set20_c.hpp" />
    <ClInclude Include="boost\mpl\set\aux_\preprocessed\plain\set30.hpp" />
    <ClInclude Include="boost\mpl\set\aux_\preprocessed\plain\set30_c.hpp" />
    <ClInclude Include="boost\mpl\set\aux_\preprocessed\plain\set40.hpp" />
    <ClInclude Include="boost\mpl\set\aux_\preprocessed\plain\set40_c.hpp" />
    <ClInclude Include="boost\mpl\set\aux_\preprocessed\plain\set50.hpp" />
    <ClInclude Include="boost\mpl\set\aux_\preprocessed\plain\set50_c.hpp" />
    <ClInclude Include="boost\mpl\set\aux_\set0.hpp" />
    <ClInclude Include="boost\mpl\set\aux_\size_impl.hpp" />
    <ClInclude Include="boost\mpl\set\aux_\tag.hpp" />
    <ClInclude Include="boost\mpl\set\aux_\value_type_impl.hpp" />
    <ClInclude Include="boost\mpl\set\set0.hpp" />
    <ClInclude Include="boost\mpl\set\set0_c.hpp" />
    <ClInclude Include="boost\mpl\set\set10.hpp" />
    <ClInclude Include="boost\mpl\set\set10_c.hpp" />
    <ClInclude Include="boost\mpl\set\set20.hpp" />
    <ClInclude Include="boost\mpl\set\set20_c.hpp" />
    <ClInclude Include="boost\mpl\set\set30.hpp" />
    <ClInclude Include="boost\mpl\set\set30_c.hpp" />
    <ClInclude Include="boost\mpl\set\set40.hpp" />
    <ClInclude Include="boost\mpl\set\set40_c.hpp" />
    <ClInclude Include="boost\mpl\set\set50.hpp" />
    <ClInclude Include="boost\mpl\set\set50_c.hpp" />
    <ClInclude Include="boost\mpl\set_c.hpp" />
    <ClInclude Include="boost\mpl\shift_left.hpp" />
    <ClInclude Include="boost\mpl\shift_right.hpp" />
    <ClInclude Include="boost\mpl\single_view.hpp" />
    <ClInclude Include="boost\mpl\size.hpp" />
    <ClInclude Include="boost\mpl\sizeof.hpp" />
    <ClInclude Include="boost\mpl\size_fwd.hpp" />
    <ClInclude Include="boost\mpl\size_t.hpp" />
    <ClInclude Include="boost\mpl\size_t_fwd.hpp" />
    <ClInclude Include="boost\mpl\sort.hpp" />
    <ClInclude Include="boost\mpl\stable_partition.hpp" />
    <ClInclude Include="boost\mpl\string.hpp" />
    <ClInclude Include="boost\mpl\switch.hpp" />
    <ClInclude Include="boost\mpl\tag.hpp" />
    <ClInclude Include="boost\mpl\times.hpp" />
    <ClInclude Include="boost\mpl\transform.hpp" />
    <ClInclude Include="boost\mpl\transform_view.hpp" />
    <ClInclude Include="boost\mpl\unique.hpp" />
    <ClInclude Include="boost\mpl\unpack_args.hpp" />
    <ClInclude Include="boost\mpl\upper_bound.hpp" />
    <ClInclude Include="boost\mpl\value_type.hpp" />
    <ClInclude Include="boost\mpl\value_type_fwd.hpp" />
    <ClInclude Include="boost\mpl\vector.hpp" />
    <ClInclude Include="boost\mpl\vector\aux_\at.hpp" />
    <ClInclude Include="boost\mpl\vector\aux_\back.hpp" />
    <ClInclude Include="boost\mpl\vector\aux_\begin_end.hpp" />
    <ClInclude Include="boost\mpl\vector\aux_\clear.hpp" />
    <ClInclude Include="boost\mpl\vector\aux_\empty.hpp" />
    <ClInclude Include="boost\mpl\vector\aux_\front.hpp" />
    <ClInclude Include="boost\mpl\vector\aux_\include_preprocessed.hpp" />
    <ClInclude Include="boost\mpl\vector\aux_\item.hpp" />
    <ClInclude Include="boost\mpl\vector\aux_\iterator.hpp" />
    <ClInclude Include="boost\mpl\vector\aux_\numbered.hpp" />
    <ClInclude Include="boost\mpl\vector\aux_\numbered_c.hpp" />
    <ClInclude Include="boost\mpl\vector\aux_\O1_size.hpp" />
    <ClInclude Include="boost\mpl\vector\aux_\pop_back.hpp" />
    <ClInclude Include="boost\mpl\vector\aux_\pop_front.hpp" />
    <ClInclude Include="boost\mpl\vector\aux_\preprocessed\no_ctps\vector10.hpp" />
    <ClInclude Include="boost\mpl\vector\aux_\preprocessed\no_ctps\vector10_c.hpp" />
    <ClInclude Include="boost\mpl\vector\aux_\preprocessed\no_ctps\vector20.hpp" />
    <ClInclude Include="boost\mpl\vector\aux_\preprocessed\no_ctps\vector20_c.hpp" />
    <ClInclude Include="boost\mpl\vector\aux_\preprocessed\no_ctps\vector30.hpp" />
    <ClInclude Include="boost\mpl\vector\aux_\preprocessed\no_ctps\vector30_c.hpp" />
    <ClInclude Include="boost\mpl\vector\aux_\preprocessed\no_ctps\vector40.hpp" />
    <ClInclude Include="boost\mpl\vector\aux_\preprocessed\no_ctps\vector40_c.hpp" />
    <ClInclude Include="boost\mpl\vector\aux_\preprocessed\no_ctps\vector50.hpp" />
    <ClInclude Include="boost\mpl\vector\aux_\preprocessed\no_ctps\vector50_c.hpp" />
    <ClInclude Include="boost\mpl\vector\aux_\preprocessed\plain\vector10.hpp" />
    <ClInclude Include="boost\mpl\vector\aux_\preprocessed\plain\vector10_c.hpp" />
    <ClInclude Include="boost\mpl\vector\aux_\preprocessed\plain\vector20.hpp" />
    <ClInclude Include="boost\mpl\vector\aux_\preprocessed\plain\vector20_c.hpp" />
    <ClInclude Include="boost\mpl\vector\aux_\preprocessed\plain\vector30.hpp" />
    <ClInclude Include="boost\mpl\vector\aux_\preprocessed\plain\vector30_c.hpp" />
    <ClInclude Include="boost\mpl\vector\aux_\preprocessed\plain\vector40.hpp" />
    <ClInclude Include="boost\mpl\vector\aux_\preprocessed\plain\vector40_c.hpp" />
    <ClInclude Include="boost\mpl\vector\aux_\preprocessed\plain\vector50.hpp" />
    <ClInclude Include="boost\mpl\vector\aux_\preprocessed\plain\vector50_c.hpp" />
    <ClInclude Include="boost\mpl\vector\aux_\preprocessed\typeof_based\vector10.hpp" />
    <ClInclude Include="boost\mpl\vector\aux_\preprocessed\typeof_based\vector10_c.hpp" />
    <ClInclude Include="boost\mpl\vector\aux_\preprocessed\typeof_based\vector20.hpp" />
    <ClInclude Include="boost\mpl\vector\aux_\preprocessed\typeof_based\vector20_c.hpp" />
    <ClInclude Include="boost\mpl\vector\aux_\preprocessed\typeof_based\vector30.hpp" />
    <ClInclude Include="boost\mpl\vector\aux_\preprocessed\typeof_based\vector30_c.hpp" />
    <ClInclude Include="boost\mpl\vector\aux_\preprocessed\typeof_based\vector40.hpp" />
    <ClInclude Include="boost\mpl\vector\aux_\preprocessed\typeof_based\vector40_c.hpp" />
    <ClInclude Include="boost\mpl\vector\aux_\preprocessed\typeof_based\vector50.hpp" />
    <ClInclude Include="boost\mpl\vector\aux_\preprocessed\typeof_based\vector50_c.hpp" />
    <ClInclude Include="boost\mpl\vector\aux_\push_back.hpp" />
    <ClInclude Include="boost\mpl\vector\aux_\push_front.hpp" />
    <ClInclude Include="boost\mpl\vector\aux_\size.hpp" />
    <ClInclude Include="boost\mpl\vector\aux_\tag.hpp" />
    <ClInclude Include="boost\mpl\vector\aux_\vector0.hpp" />
    <ClInclude Include="boost\mpl\vector\vector0.hpp" />
    <ClInclude Include="boost\mpl\vector\vector0_c.hpp" />
    <ClInclude Include="boost\mpl\vector\vector10.hpp" />
    <ClInclude Include="boost\mpl\vector\vector10_c.hpp" />
    <ClInclude Include="boost\mpl\vector\vector20.hpp" />
    <ClInclude Include="boost\mpl\vector\vector20_c.hpp" />
    <ClInclude Include="boost\mpl\vector\vector30.hpp" />
    <ClInclude Include="boost\mpl\vector\vector30_c.hpp" />
    <ClInclude Include="boost\mpl\vector\vector40.hpp" />
    <ClInclude Include="boost\mpl\vector\vector40_c.hpp" />
    <ClInclude Include="boost\mpl\vector\vector50.hpp" />
    <ClInclude Include="boost\mpl\vector\vector50_c.hpp" />
    <ClInclude Include="boost\mpl\vector_c.hpp" />
    <ClInclude Include="boost\mpl\void.hpp" />
    <ClInclude Include="boost\mpl\void_fwd.hpp" />
    <ClInclude Include="boost\mpl\zip_view.hpp" />
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <VCProjectVersion>15.0</VCProjectVersion>
    <ProjectGuid>{B515FF0D-E3F3-4DCA-8C22-85B89803D8FB}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <RootNamespace>BoostMpl</RootNamespace>
    <WindowsTargetPlatformVersion>10.0.17134.0</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v141</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v141</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v141</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v141</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="Shared">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <LinkIncremental>true</LinkIncremental>
    <CodeAnalysisRuleSet>NativeRecommendedRules.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <LinkIncremental>true</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <LinkIncremental>false</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <LinkIncremental>false</LinkIncremental>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>WIN32;_DEBUG;BOOSTMPL_EXPORTS;_WINDOWS;_USRDLL;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>_DEBUG;BOOSTMPL_EXPORTS;_WINDOWS;_USRDLL;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>WIN32;NDEBUG;BOOSTMPL_EXPORTS;_WINDOWS;_USRDLL;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>NDEBUG;BOOSTMPL_EXPORTS;_WINDOWS;_USRDLL;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
  </ItemDefinitionGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>