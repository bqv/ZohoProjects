<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="boost\aligned_storage.hpp" />
    <ClInclude Include="boost\type_traits.hpp" />
    <ClInclude Include="boost\type_traits\add_const.hpp" />
    <ClInclude Include="boost\type_traits\add_cv.hpp" />
    <ClInclude Include="boost\type_traits\add_lvalue_reference.hpp" />
    <ClInclude Include="boost\type_traits\add_pointer.hpp" />
    <ClInclude Include="boost\type_traits\add_reference.hpp" />
    <ClInclude Include="boost\type_traits\add_rvalue_reference.hpp" />
    <ClInclude Include="boost\type_traits\add_volatile.hpp" />
    <ClInclude Include="boost\type_traits\aligned_storage.hpp" />
    <ClInclude Include="boost\type_traits\alignment_of.hpp" />
    <ClInclude Include="boost\type_traits\alignment_traits.hpp" />
    <ClInclude Include="boost\type_traits\arithmetic_traits.hpp" />
    <ClInclude Include="boost\type_traits\array_traits.hpp" />
    <ClInclude Include="boost\type_traits\broken_compiler_spec.hpp" />
    <ClInclude Include="boost\type_traits\common_type.hpp" />
    <ClInclude Include="boost\type_traits\composite_traits.hpp" />
    <ClInclude Include="boost\type_traits\conditional.hpp" />
    <ClInclude Include="boost\type_traits\config.hpp" />
    <ClInclude Include="boost\type_traits\conversion_traits.hpp" />
    <ClInclude Include="boost\type_traits\copy_cv.hpp" />
    <ClInclude Include="boost\type_traits\cv_traits.hpp" />
    <ClInclude Include="boost\type_traits\decay.hpp" />
    <ClInclude Include="boost\type_traits\declval.hpp" />
    <ClInclude Include="boost\type_traits\detail\bool_trait_def.hpp" />
    <ClInclude Include="boost\type_traits\detail\bool_trait_undef.hpp" />
    <ClInclude Include="boost\type_traits\detail\common_arithmetic_type.hpp" />
    <ClInclude Include="boost\type_traits\detail\common_type_impl.hpp" />
    <ClInclude Include="boost\type_traits\detail\composite_member_pointer_type.hpp" />
    <ClInclude Include="boost\type_traits\detail\composite_pointer_type.hpp" />
    <ClInclude Include="boost\type_traits\detail\config.hpp" />
    <ClInclude Include="boost\type_traits\detail\detector.hpp" />
    <ClInclude Include="boost\type_traits\detail\has_binary_operator.hpp" />
    <ClInclude Include="boost\type_traits\detail\has_postfix_operator.hpp" />
    <ClInclude Include="boost\type_traits\detail\has_prefix_operator.hpp" />
    <ClInclude Include="boost\type_traits\detail\ice_and.hpp" />
    <ClInclude Include="boost\type_traits\detail\ice_eq.hpp" />
    <ClInclude Include="boost\type_traits\detail\ice_not.hpp" />
    <ClInclude Include="boost\type_traits\detail\ice_or.hpp" />
    <ClInclude Include="boost\type_traits\detail\is_function_cxx_03.hpp" />
    <ClInclude Include="boost\type_traits\detail\is_function_cxx_11.hpp" />
    <ClInclude Include="boost\type_traits\detail\is_function_msvc10_fix.hpp" />
    <ClInclude Include="boost\type_traits\detail\is_function_ptr_helper.hpp" />
    <ClInclude Include="boost\type_traits\detail\is_function_ptr_tester.hpp" />
    <ClInclude Include="boost\type_traits\detail\is_likely_lambda.hpp" />
    <ClInclude Include="boost\type_traits\detail\is_member_function_pointer_cxx_03.hpp" />
    <ClInclude Include="boost\type_traits\detail\is_member_function_pointer_cxx_11.hpp" />
    <ClInclude Include="boost\type_traits\detail\is_mem_fun_pointer_impl.hpp" />
    <ClInclude Include="boost\type_traits\detail\is_mem_fun_pointer_tester.hpp" />
    <ClInclude Include="boost\type_traits\detail\is_rvalue_reference_msvc10_fix.hpp" />
    <ClInclude Include="boost\type_traits\detail\mp_defer.hpp" />
    <ClInclude Include="boost\type_traits\detail\template_arity_spec.hpp" />
    <ClInclude Include="boost\type_traits\detail\yes_no_type.hpp" />
    <ClInclude Include="boost\type_traits\detected.hpp" />
    <ClInclude Include="boost\type_traits\detected_or.hpp" />
    <ClInclude Include="boost\type_traits\enable_if.hpp" />
    <ClInclude Include="boost\type_traits\extent.hpp" />
    <ClInclude Include="boost\type_traits\floating_point_promotion.hpp" />
    <ClInclude Include="boost\type_traits\function_traits.hpp" />
    <ClInclude Include="boost\type_traits\has_bit_and.hpp" />
    <ClInclude Include="boost\type_traits\has_bit_and_assign.hpp" />
    <ClInclude Include="boost\type_traits\has_bit_or.hpp" />
    <ClInclude Include="boost\type_traits\has_bit_or_assign.hpp" />
    <ClInclude Include="boost\type_traits\has_bit_xor.hpp" />
    <ClInclude Include="boost\type_traits\has_bit_xor_assign.hpp" />
    <ClInclude Include="boost\type_traits\has_complement.hpp" />
    <ClInclude Include="boost\type_traits\has_dereference.hpp" />
    <ClInclude Include="boost\type_traits\has_divides.hpp" />
    <ClInclude Include="boost\type_traits\has_divides_assign.hpp" />
    <ClInclude Include="boost\type_traits\has_equal_to.hpp" />
    <ClInclude Include="boost\type_traits\has_greater.hpp" />
    <ClInclude Include="boost\type_traits\has_greater_equal.hpp" />
    <ClInclude Include="boost\type_traits\has_left_shift.hpp" />
    <ClInclude Include="boost\type_traits\has_left_shift_assign.hpp" />
    <ClInclude Include="boost\type_traits\has_less.hpp" />
    <ClInclude Include="boost\type_traits\has_less_equal.hpp" />
    <ClInclude Include="boost\type_traits\has_logical_and.hpp" />
    <ClInclude Include="boost\type_traits\has_logical_not.hpp" />
    <ClInclude Include="boost\type_traits\has_logical_or.hpp" />
    <ClInclude Include="boost\type_traits\has_minus.hpp" />
    <ClInclude Include="boost\type_traits\has_minus_assign.hpp" />
    <ClInclude Include="boost\type_traits\has_modulus.hpp" />
    <ClInclude Include="boost\type_traits\has_modulus_assign.hpp" />
    <ClInclude Include="boost\type_traits\has_multiplies.hpp" />
    <ClInclude Include="boost\type_traits\has_multiplies_assign.hpp" />
    <ClInclude Include="boost\type_traits\has_negate.hpp" />
    <ClInclude Include="boost\type_traits\has_new_operator.hpp" />
    <ClInclude Include="boost\type_traits\has_nothrow_assign.hpp" />
    <ClInclude Include="boost\type_traits\has_nothrow_constructor.hpp" />
    <ClInclude Include="boost\type_traits\has_nothrow_copy.hpp" />
    <ClInclude Include="boost\type_traits\has_nothrow_destructor.hpp" />
    <ClInclude Include="boost\type_traits\has_not_equal_to.hpp" />
    <ClInclude Include="boost\type_traits\has_operator.hpp" />
    <ClInclude Include="boost\type_traits\has_plus.hpp" />
    <ClInclude Include="boost\type_traits\has_plus_assign.hpp" />
    <ClInclude Include="boost\type_traits\has_post_decrement.hpp" />
    <ClInclude Include="boost\type_traits\has_post_increment.hpp" />
    <ClInclude Include="boost\type_traits\has_pre_decrement.hpp" />
    <ClInclude Include="boost\type_traits\has_pre_increment.hpp" />
    <ClInclude Include="boost\type_traits\has_right_shift.hpp" />
    <ClInclude Include="boost\type_traits\has_right_shift_assign.hpp" />
    <ClInclude Include="boost\type_traits\has_trivial_assign.hpp" />
    <ClInclude Include="boost\type_traits\has_trivial_constructor.hpp" />
    <ClInclude Include="boost\type_traits\has_trivial_copy.hpp" />
    <ClInclude Include="boost\type_traits\has_trivial_destructor.hpp" />
    <ClInclude Include="boost\type_traits\has_trivial_move_assign.hpp" />
    <ClInclude Include="boost\type_traits\has_trivial_move_constructor.hpp" />
    <ClInclude Include="boost\type_traits\has_unary_minus.hpp" />
    <ClInclude Include="boost\type_traits\has_unary_plus.hpp" />
    <ClInclude Include="boost\type_traits\has_virtual_destructor.hpp" />
    <ClInclude Include="boost\type_traits\ice.hpp" />
    <ClInclude Include="boost\type_traits\integral_constant.hpp" />
    <ClInclude Include="boost\type_traits\integral_promotion.hpp" />
    <ClInclude Include="boost\type_traits\intrinsics.hpp" />
    <ClInclude Include="boost\type_traits\is_abstract.hpp" />
    <ClInclude Include="boost\type_traits\is_arithmetic.hpp" />
    <ClInclude Include="boost\type_traits\is_array.hpp" />
    <ClInclude Include="boost\type_traits\is_assignable.hpp" />
    <ClInclude Include="boost\type_traits\is_base_and_derived.hpp" />
    <ClInclude Include="boost\type_traits\is_base_of.hpp" />
    <ClInclude Include="boost\type_traits\is_base_of_tr1.hpp" />
    <ClInclude Include="boost\type_traits\is_class.hpp" />
    <ClInclude Include="boost\type_traits\is_complete.hpp" />
    <ClInclude Include="boost\type_traits\is_complex.hpp" />
    <ClInclude Include="boost\type_traits\is_compound.hpp" />
    <ClInclude Include="boost\type_traits\is_const.hpp" />
    <ClInclude Include="boost\type_traits\is_constructible.hpp" />
    <ClInclude Include="boost\type_traits\is_convertible.hpp" />
    <ClInclude Include="boost\type_traits\is_copy_assignable.hpp" />
    <ClInclude Include="boost\type_traits\is_copy_constructible.hpp" />
    <ClInclude Include="boost\type_traits\is_default_constructible.hpp" />
    <ClInclude Include="boost\type_traits\is_destructible.hpp" />
    <ClInclude Include="boost\type_traits\is_detected.hpp" />
    <ClInclude Include="boost\type_traits\is_detected_convertible.hpp" />
    <ClInclude Include="boost\type_traits\is_detected_exact.hpp" />
    <ClInclude Include="boost\type_traits\is_empty.hpp" />
    <ClInclude Include="boost\type_traits\is_enum.hpp" />
    <ClInclude Include="boost\type_traits\is_final.hpp" />
    <ClInclude Include="boost\type_traits\is_float.hpp" />
    <ClInclude Include="boost\type_traits\is_floating_point.hpp" />
    <ClInclude Include="boost\type_traits\is_function.hpp" />
    <ClInclude Include="boost\type_traits\is_fundamental.hpp" />
    <ClInclude Include="boost\type_traits\is_integral.hpp" />
    <ClInclude Include="boost\type_traits\is_list_constructible.hpp" />
    <ClInclude Include="boost\type_traits\is_lvalue_reference.hpp" />
    <ClInclude Include="boost\type_traits\is_member_function_pointer.hpp" />
    <ClInclude Include="boost\type_traits\is_member_object_pointer.hpp" />
    <ClInclude Include="boost\type_traits\is_member_pointer.hpp" />
    <ClInclude Include="boost\type_traits\is_noncopyable.hpp" />
    <ClInclude Include="boost\type_traits\is_nothrow_move_assignable.hpp" />
    <ClInclude Include="boost\type_traits\is_nothrow_move_constructible.hpp" />
    <ClInclude Include="boost\type_traits\is_nothrow_swappable.hpp" />
    <ClInclude Include="boost\type_traits\is_object.hpp" />
    <ClInclude Include="boost\type_traits\is_pod.hpp" />
    <ClInclude Include="boost\type_traits\is_pointer.hpp" />
    <ClInclude Include="boost\type_traits\is_polymorphic.hpp" />
    <ClInclude Include="boost\type_traits\is_reference.hpp" />
    <ClInclude Include="boost\type_traits\is_rvalue_reference.hpp" />
    <ClInclude Include="boost\type_traits\is_same.hpp" />
    <ClInclude Include="boost\type_traits\is_scalar.hpp" />
    <ClInclude Include="boost\type_traits\is_signed.hpp" />
    <ClInclude Include="boost\type_traits\is_stateless.hpp" />
    <ClInclude Include="boost\type_traits\is_union.hpp" />
    <ClInclude Include="boost\type_traits\is_unsigned.hpp" />
    <ClInclude Include="boost\type_traits\is_virtual_base_of.hpp" />
    <ClInclude Include="boost\type_traits\is_void.hpp" />
    <ClInclude Include="boost\type_traits\is_volatile.hpp" />
    <ClInclude Include="boost\type_traits\make_signed.hpp" />
    <ClInclude Include="boost\type_traits\make_unsigned.hpp" />
    <ClInclude Include="boost\type_traits\make_void.hpp" />
    <ClInclude Include="boost\type_traits\nonesuch.hpp" />
    <ClInclude Include="boost\type_traits\object_traits.hpp" />
    <ClInclude Include="boost\type_traits\promote.hpp" />
    <ClInclude Include="boost\type_traits\rank.hpp" />
    <ClInclude Include="boost\type_traits\reference_traits.hpp" />
    <ClInclude Include="boost\type_traits\remove_all_extents.hpp" />
    <ClInclude Include="boost\type_traits\remove_bounds.hpp" />
    <ClInclude Include="boost\type_traits\remove_const.hpp" />
    <ClInclude Include="boost\type_traits\remove_cv.hpp" />
    <ClInclude Include="boost\type_traits\remove_cv_ref.hpp" />
    <ClInclude Include="boost\type_traits\remove_extent.hpp" />
    <ClInclude Include="boost\type_traits\remove_pointer.hpp" />
    <ClInclude Include="boost\type_traits\remove_reference.hpp" />
    <ClInclude Include="boost\type_traits\remove_volatile.hpp" />
    <ClInclude Include="boost\type_traits\same_traits.hpp" />
    <ClInclude Include="boost\type_traits\transform_traits.hpp" />
    <ClInclude Include="boost\type_traits\type_identity.hpp" />
    <ClInclude Include="boost\type_traits\type_with_alignment.hpp" />
    <ClInclude Include="boost\utility\declval.hpp" />
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <VCProjectVersion>15.0</VCProjectVersion>
    <ProjectGuid>{860D68F1-D910-4982-B4DD-10C7B45316F8}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <RootNamespace>BoostTypeTraits</RootNamespace>
    <WindowsTargetPlatformVersion>10.0.17134.0</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v141</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v141</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v141</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v141</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="Shared">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <LinkIncremental>true</LinkIncremental>
    <CodeAnalysisRuleSet>NativeRecommendedRules.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <LinkIncremental>true</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <LinkIncremental>false</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <LinkIncremental>false</LinkIncremental>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>WIN32;_DEBUG;BOOSTTYPETRAITS_EXPORTS;_WINDOWS;_USRDLL;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>_DEBUG;BOOSTTYPETRAITS_EXPORTS;_WINDOWS;_USRDLL;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>WIN32;NDEBUG;BOOSTTYPETRAITS_EXPORTS;_WINDOWS;_USRDLL;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>NDEBUG;BOOSTTYPETRAITS_EXPORTS;_WINDOWS;_USRDLL;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
  </ItemDefinitionGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>